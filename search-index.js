var N=null,E="",T="t",U="u",searchIndex={};
var R=["complex","The 1 scaling factor forward transform","The \\(\\frac 1 n\\) scaling factor backward transform","Returns a instances to execute FFT","with_len","Returns a instances to execute length initialized FFT","Reinitialize length","usize","forward","forward0","forwardu","The \\(\\frac 1 {\\sqrt n}\\) scaling factor forward transform","forwardn","backward","backward0","The 1 scaling factor backward transform","backwardu","The \\(\\frac 1 {\\sqrt n}\\) scaling factor backward transform","Returns a instances to execute DCT","The \\(\\frac 1 n\\) scaling factor forward transform","backwardn","try_from","try_into","borrow_mut","result","type_id","borrow","typeid"];
searchIndex["chfft"]={"doc":"Chalharu's Fastest Fourier Transform.","i":[[3,"CFft1D","chfft","Perform a complex-to-complex one-dimensional Fourier…",N,N],[3,"CFft2D",E,"Perform a complex-to-complex two-dimensional Fourier…",N,N],[3,"Dct1D",E,"Perform a discrete cosine transform",N,N],[3,"Mdct1D",E,"Perform a Modified discrete cosine transform",N,N],[3,"RFft1D",E,"Perform a real-to-complex one-dimensional Fourier transform",N,N],[11,"new",E,R[3],0,[[],["self"]]],[11,R[4],E,R[5],0,[[[R[7]]],["self"]]],[11,"setup",E,R[6],0,[[["self"],[R[7]]]]],[11,R[8],E,R[1],0,[[["self"]],[["vec",[R[0]]],[R[0]]]]],[11,R[9],E,R[1],0,[[["self"]],[["vec",[R[0]]],[R[0]]]]],[11,R[10],E,R[11],0,[[["self"]],[["vec",[R[0]]],[R[0]]]]],[11,R[12],E,"The \\(\\frac 1 {n}\\) scaling factor forward transform",0,[[["self"]],[["vec",[R[0]]],[R[0]]]]],[11,R[13],E,R[2],0,[[["self"]],[["vec",[R[0]]],[R[0]]]]],[11,R[14],E,R[15],0,[[["self"]],[["vec",[R[0]]],[R[0]]]]],[11,R[16],E,R[17],0,[[["self"]],[["vec",[R[0]]],[R[0]]]]],[11,R[20],E,R[2],0,[[["self"]],[["vec",[R[0]]],[R[0]]]]],[11,"forward0i",E,"The 1 scaling factor and in-place forward transform",0,[[["self"]]]],[11,"backward0i",E,"The 1 scaling factor and in-place backward transform",0,[[["self"]]]],[11,"new",E,R[3],1,[[],["self"]]],[11,R[4],E,R[5],1,[[[R[7]]],["self"]]],[11,"setup",E,R[6],1,[[["self"],[R[7]]]]],[11,R[8],E,R[1],1,[[["self"]],[["vec",[R[0]]],["vec",["vec"]]]]],[11,R[9],E,R[1],1,[[["self"]],[["vec",[R[0]]],["vec",["vec"]]]]],[11,R[10],E,R[11],1,[[["self"]],[["vec",[R[0]]],["vec",["vec"]]]]],[11,R[12],E,R[19],1,[[["self"]],[["vec",[R[0]]],["vec",["vec"]]]]],[11,R[13],E,R[2],1,[[["self"]],[["vec",[R[0]]],["vec",["vec"]]]]],[11,R[14],E,R[15],1,[[["self"]],[["vec",[R[0]]],["vec",["vec"]]]]],[11,R[16],E,R[17],1,[[["self"]],[["vec",[R[0]]],["vec",["vec"]]]]],[11,"new",E,R[18],2,[[[R[7]],["bool"]],["self"]]],[11,"setup",E,R[6],2,[[["self"],[R[7]],["bool"]]]],[11,R[8],E,R[1],2,[[["self"]],["vec"]]],[11,R[9],E,R[1],2,[[["self"]],["vec"]]],[11,R[10],E,"The unitary transform scaling factor forward transform",2,[[["self"]],["vec"]]],[11,R[12],E,"The inverse scaling factor forward transform",2,[[["self"]],["vec"]]],[11,"with_sine",E,"Returns a instances to execute DCT with sine window",3,[[[R[7]]],["self"]]],[11,"with_vorbis",E,"Returns a instances to execute DCT with vorbis window",3,[[[R[7]]],["self"]]],[11,"new",E,R[18],3,[[["f"],[R[7]]],["self"]]],[11,"setup",E,R[6],3,[[["self"],[R[7]]]]],[11,R[8],E,R[1],3,[[["self"]],["vec"]]],[11,R[13],E,R[15],3,[[["self"]],["vec"]]],[11,R[10],E,"The \\(\\sqrt{\\frac 2 n}\\) scaling factor forward transform",3,[[["self"]],["vec"]]],[11,R[16],E,"The \\(\\sqrt{\\frac 2 n}\\) scaling factor backward transform",3,[[["self"]],["vec"]]],[11,"new",E,R[3],4,[[[R[7]]],["self"]]],[11,"setup",E,R[6],4,[[["self"],[R[7]]]]],[11,R[8],E,R[1],4,[[["self"]],[["vec",[R[0]]],[R[0]]]]],[11,R[9],E,R[1],4,[[["self"]],[["vec",[R[0]]],[R[0]]]]],[11,R[10],E,R[11],4,[[["self"]],[["vec",[R[0]]],[R[0]]]]],[11,R[12],E,R[19],4,[[["self"]],[["vec",[R[0]]],[R[0]]]]],[11,R[13],E,R[2],4,[[["self"]],["vec"]]],[11,R[14],E,R[15],4,[[["self"]],["vec"]]],[11,R[16],E,R[17],4,[[["self"]],["vec"]]],[11,R[20],E,R[2],4,[[["self"]],["vec"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[[U]],[R[24]]]],[11,R[22],E,E,0,[[],[R[24]]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"]],[R[27]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[[U]],[R[24]]]],[11,R[22],E,E,1,[[],[R[24]]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"]],[R[27]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[21],E,E,2,[[[U]],[R[24]]]],[11,R[22],E,E,2,[[],[R[24]]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"]],[R[27]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[21],E,E,3,[[[U]],[R[24]]]],[11,R[22],E,E,3,[[],[R[24]]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"]],[R[27]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[21],E,E,4,[[[U]],[R[24]]]],[11,R[22],E,E,4,[[],[R[24]]]],[11,R[23],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"]],[R[27]]]],[11,"default",E,R[3],0,[[],["self"]]],[11,"default",E,R[3],1,[[],["self"]]]],"p":[[3,"CFft1D"],[3,"CFft2D"],[3,"Dct1D"],[3,"Mdct1D"],[3,"RFft1D"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);